var documenterSearchIndex = {"docs":
[{"location":"api/#API-Reference","page":"API Reference","title":"API Reference","text":"","category":"section"},{"location":"api/#Dimensionless-numbers","page":"API Reference","title":"Dimensionless numbers","text":"","category":"section"},{"location":"api/","page":"API Reference","title":"API Reference","text":"plasma_beta","category":"page"},{"location":"api/#PlasmaFormulary.plasma_beta","page":"API Reference","title":"PlasmaFormulary.plasma_beta","text":"plasma_beta(T, n, B)\n\nCompute the plamsa beta (β), the ratio of thermal pressure to magnetic pressure.\n\nArguments\n\nT: The temperature of the plasma.\nn: The particle density of the plasma.\nB: The magnetic field in the plasma.\n\nExample\n\njulia> plasma_beta(1e6u\"K\", 1e19u\"m^-3\", 0.2u\"T\")\n0.008674873511172188\n\nReferences\n\nPlasmaPy Documentation Wikipedia\n\n\n\n\n\n","category":"function"},{"location":"api/#Otherwise-undocumented-functions","page":"API Reference","title":"Otherwise undocumented functions","text":"","category":"section"},{"location":"api/","page":"API Reference","title":"API Reference","text":"This section will be removed once the documentation is complete.","category":"page"},{"location":"api/","page":"API Reference","title":"API Reference","text":"Modules = [PlasmaFormulary]\nPages   = [\"frequencies.jl\", \"lengths.jl\", \"misc.jl\", \"speeds.jl\"]","category":"page"},{"location":"api/#PlasmaFormulary.plasma_frequency-Tuple{Union{Unitful.Quantity{T, 𝐋^-3, U}, Unitful.Level{L, S, Unitful.Quantity{T, 𝐋^-3, U}} where {L, S}} where {T, U}, Integer, Any}","page":"API Reference","title":"PlasmaFormulary.plasma_frequency","text":"plasma_frequency(n, Z, mass_numb)\n\nIon plasma frequency.\n\n\n\n\n\n","category":"method"},{"location":"api/#PlasmaFormulary.plasma_frequency-Tuple{Union{Unitful.Quantity{T, 𝐋^-3, U}, Unitful.Level{L, S, Unitful.Quantity{T, 𝐋^-3, U}} where {L, S}} where {T, U}, Union{Unitful.Quantity{T, 𝐈 𝐓, U}, Unitful.Level{L, S, Unitful.Quantity{T, 𝐈 𝐓, U}} where {L, S}} where {T, U}, Union{Unitful.Quantity{T, 𝐌, U}, Unitful.Level{L, S, Unitful.Quantity{T, 𝐌, U}} where {L, S}} where {T, U}}","page":"API Reference","title":"PlasmaFormulary.plasma_frequency","text":"plasma_frequency(n, [q, mass])\n\nParticle plasma frequency, often this is the cold electrons plasma frequency.\n\nReferences:\n\nhttps://en.wikipedia.org/wiki/Plasma_oscillation\n\n\n\n\n\n","category":"method"},{"location":"api/#PlasmaFormulary.gyroradius-Tuple{Union{Unitful.Quantity{T, 𝐌 𝐈^-1 𝐓^-2, U}, Unitful.Level{L, S, Unitful.Quantity{T, 𝐌 𝐈^-1 𝐓^-2, U}} where {L, S}} where {T, U}, Union{Unitful.Quantity{T, 𝐌, U}, Unitful.Level{L, S, Unitful.Quantity{T, 𝐌, U}} where {L, S}} where {T, U}, Union{Unitful.Quantity{T, 𝐈 𝐓, U}, Unitful.Level{L, S, Unitful.Quantity{T, 𝐈 𝐓, U}} where {L, S}} where {T, U}, Union{Unitful.Quantity{T, 𝐋 𝐓^-1, U}, Unitful.Level{L, S, Unitful.Quantity{T, 𝐋 𝐓^-1, U}} where {L, S}} where {T, U}}","page":"API Reference","title":"PlasmaFormulary.gyroradius","text":"Calculate the radius of circular motion for a charged particle in a uniform magnetic field\n\nReferences: PlasmaPy API Documentation\n\nExamples\n\njulia> gyroradius(0.2u\"T\", Unitful.me, Unitful.q, 1e6u\"K\")\n0.00015651672339994665 m\n\n\n\n\n\n","category":"method"},{"location":"api/#PlasmaFormulary.inertial_length-Tuple{Union{Unitful.Quantity{T, 𝐋^-3, U}, Unitful.Level{L, S, Unitful.Quantity{T, 𝐋^-3, U}} where {L, S}} where {T, U}, Union{Unitful.Quantity{T, 𝐈 𝐓, U}, Unitful.Level{L, S, Unitful.Quantity{T, 𝐈 𝐓, U}} where {L, S}} where {T, U}, Union{Unitful.Quantity{T, 𝐌, U}, Unitful.Level{L, S, Unitful.Quantity{T, 𝐌, U}} where {L, S}} where {T, U}}","page":"API Reference","title":"PlasmaFormulary.inertial_length","text":"The inertial length is the characteristic length scale for a particle to be accelerated in a plasma. The Hall effect becomes important on length scales shorter than the ion inertial length.\n\nReferences: PlasmaPy API Documentation\n\n\n\n\n\n","category":"method"},{"location":"api/#PlasmaFormulary.magnetic_pressure-Tuple{Union{Unitful.Quantity{T, 𝐌 𝐈^-1 𝐓^-2, U}, Unitful.Level{L, S, Unitful.Quantity{T, 𝐌 𝐈^-1 𝐓^-2, U}} where {L, S}} where {T, U}}","page":"API Reference","title":"PlasmaFormulary.magnetic_pressure","text":"magnetic_pressure(B)\n\nCalculate the magnetic pressure.\n\n\n\n\n\n","category":"method"},{"location":"api/#PlasmaFormulary.thermal_pressure-Tuple{Union{Unitful.Level{L, S, Unitful.Quantity{T, 𝚯, U}} where {T, U, L, S}, Unitful.Level{L, S, Unitful.Quantity{T, 𝐋^2 𝐌 𝐓^-2, U}} where {T, U, L, S}, Unitful.Quantity{T, 𝚯} where T, Unitful.Quantity{T, 𝐋^2 𝐌 𝐓^-2} where T}, Union{Unitful.Quantity{T, 𝐋^-3, U}, Unitful.Level{L, S, Unitful.Quantity{T, 𝐋^-3, U}} where {L, S}} where {T, U}}","page":"API Reference","title":"PlasmaFormulary.thermal_pressure","text":"thermal_pressure(T, n)\n\nCalculate the thermal pressure for a Maxwellian distribution.\n\nArguments\n\nT: The particle temperature or energy.\nn: The particle number density.\n\n\n\n\n\n","category":"method"},{"location":"api/#PlasmaFormulary.alfven_velocity-Tuple{Union{Unitful.Quantity{T, 𝐌 𝐈^-1 𝐓^-2, U}, Unitful.Level{L, S, Unitful.Quantity{T, 𝐌 𝐈^-1 𝐓^-2, U}} where {L, S}} where {T, U}, Union{Unitful.Quantity{T, 𝐌 𝐋^-3, U}, Unitful.Level{L, S, Unitful.Quantity{T, 𝐌 𝐋^-3, U}} where {L, S}} where {T, U}}","page":"API Reference","title":"PlasmaFormulary.alfven_velocity","text":"The typical propagation speed of magnetic disturbances in a quasineutral plasma.\n\nReferences: PlasmaPy API Documentation\n\n\n\n\n\n","category":"method"},{"location":"api/#PlasmaFormulary.thermal_velocity_coefficients-Tuple{PlasmaFormulary.MostProbable, Val{1}}","page":"API Reference","title":"PlasmaFormulary.thermal_velocity_coefficients","text":"thermal_velocity_coefficients(method::ThermalVelocityMethod, ndim::Int)\n\nGet the thermal speed coefficient corresponding to the desired thermal speed definition.\n\nArguments\n\nmethod::ThermalVelocityMethod: Method to be used for calculating the thermal speed. Valid values are MostProbable(), RMS(), MeanMagnitude(), and NRL().\nndim::Val{Int}: Dimensionality (1D, 2D, 3D) of space in which to calculate thermal speed. Valid values are Val(1), Val(2), or Val{3}.\n\n\n\n\n\n","category":"method"},{"location":"","page":"Home","title":"Home","text":"CurrentModule = PlasmaFormulary","category":"page"},{"location":"#PlasmaFormulary","page":"Home","title":"PlasmaFormulary","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"A Julia package for plasma physics formulas. This package implements a subset of the formulas found in the NRL Plasma Formulary, as well as some additional formulas taken from the PlasmaPy project.","category":"page"},{"location":"","page":"Home","title":"Home","text":"In the future, the package will support providing particle properties using the ChargedParticles.jl package.","category":"page"},{"location":"#Quick-Example","page":"Home","title":"Quick Example","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"using PlasmaFormulary, Unitful\n\nPlasmaFormulary.debye_length(1e18u\"cm^-3\", 10u\"eV\")","category":"page"},{"location":"#Related-packages","page":"Home","title":"Related packages","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"PlasmaPy : plasmapy.formulary subpackage provides theoretical formulas for calculation of physical quantities helpful for plasma physics.\nFusionFormulary.jl","category":"page"},{"location":"#Index","page":"Home","title":"Index","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"","category":"page"}]
}
